# Add Species groups from the original data sett
ind_coord$word <- rownames(glove_embedding)
View(ind_coord)
# subset cluster 91
ind_coord_clst91 <- ind_coord[ which(ind_coord$cluster == 91), ]
View(ind_coord_clst91)
# create plot
ggscatter(ind_coord_clst91, ellipse = TRUE, ellipse.type = "euclid", size = 1.5, xlab = paste0("Dim 1 (", variance.percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance.percent[2], "% )" )
) +
geom_text(aes(x = "Dim.1", y = "Dim.2", label = word),  size = 3) +
ggtheme = theme_bw()
# create plot
library(ggpubr)
ggscatter(ind_coord_clst91, ellipse = TRUE, ellipse.type = "euclid", size = 1.5, xlab = paste0("Dim 1 (", variance.percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance.percent[2], "% )" )
) +
geom_text(aes(x = "Dim.1", y = "Dim.2", label = word),  size = 3) +
ggtheme = theme_bw()
ggscatter(ind_coord_clst91, ellipse = TRUE, ellipse.type = "euclid", size = 1.5) +
geom_text(aes(x = "Dim.1", y = "Dim.2", label = word),  size = 3) +
ggtheme = theme_bw()
ggscatter(geom_text(aes(x = "Dim.1", y = "Dim.2", label = word),  size = 3), ind_coord_clst91, ellipse = TRUE, ellipse.type = "euclid", size = 1.5)
ggscatter(
ind_coord_plot, x = "Dim.1", y = "Dim.2",
label = "word", ellipse = TRUE, ellipse.type = "euclid",
ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance.percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance.percent[2], "% )" )
) +
stat_mean(aes(color = cluster), size = 4)
eigenvalue <- round(get_eigenvalue(res_pca), 1)
variance_percent <- eigenvalue$variance_percent
ggscatter(
ind_coord_plot, x = "Dim.1", y = "Dim.2",
label = "word", ellipse = TRUE, ellipse.type = "euclid",
ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance_percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance_percent[2], "% )" )
) +
stat_mean(aes(color = cluster), size = 4)
ggscatter(
ind_coord_clst91, x = "Dim.1", y = "Dim.2",
label = "word", ellipse = TRUE, ellipse.type = "euclid",
ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance_percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance_percent[2], "% )" )
) +
stat_mean(aes(color = cluster), size = 4)
eigenvalue <- round(get_eigenvalue(res_pca), 1)
View(eigenvalue)
variance_percent <- eigenvalue$variance.percent
# subset cluster 91
ind_coord_clst91 <- ind_coord[ which(ind_coord$cluster == 91), ]
ggscatter(
ind_coord_clst91, x = "Dim.1", y = "Dim.2",
label = "word", ellipse = FALSE, ellipse.type = "euclid",
ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance_percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance_percent[2], "% )" )
) +
stat_mean(aes(color = cluster), size = 4)
ggscatter(
ind_coord_clst91, x = "Dim.1", y = "Dim.2",
label = "word", ellipse = FALSE, ellipse.type = "euclid", legend = "none"
ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance_percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance_percent[2], "% )" )
)
ggscatter(
ind_coord_clst91, x = "Dim.1", y = "Dim.2",
label = "word", ellipse = FALSE, ellipse.type = "euclid", legend = "none",
ggtheme = theme_bw(),
xlab = paste0("Dim 1 (", variance_percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance_percent[2], "% )" )
)
ggscatter(
ind_coord_clst91, x = "Dim.1", y = "Dim.2",
label = "word", ellipse = FALSE, ellipse.type = "euclid", legend = "none",
ggtheme = theme_minimal(),
xlab = paste0("Dim 1 (", variance_percent[1], "% )" ),
ylab = paste0("Dim 2 (", variance_percent[2], "% )" )
)
# look at the size of the clusters
k_means_fit$size
cluster31 <- subset(words_with_cluster, subset = kmeans100 == 31)
View(cluster31)
words_with_cluster[words_with_cluster$word == "ethnicity", ]
cluster14 <- subset(words_with_cluster, subset = kmeans100 == 14)
View(cluster14)
embedding_cluster14 <- subset(glove_embedding, rownames(glove_embedding) %in% cluster14$word)
tsne_14 <- Rtsne(embedding_cluster14, dims = 2, perplexity = 25, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_14 <- Rtsne(embedding_cluster14, dims = 2, perplexity = 20, verbose=TRUE, max_iter = 500, pca = TRUE)
# create df that can be used for making the plot.
embedding_cluster14_plot <- as.data.frame(embedding_cluster14)
embedding_cluster14_plot$word <- rownames(embedding_cluster14_plot)
plot_df <- data.frame(tsne_14$Y) %>%
mutate(
word = embedding_cluster14_plot$word,
)
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 14") +
theme(legend.position = "none") +
theme_minimal()
p
# create plot of separate cluster with tsne
embedding_cluster31 <- subset(glove_embedding, rownames(glove_embedding) %in% cluster31$word)
tsne_31 <- Rtsne(embedding_cluster31, dims = 2, perplexity = 25, verbose=TRUE, max_iter = 500, pca = TRUE)
# create df that can be used for making the plot.
embedding_cluster31_plot <- as.data.frame(embedding_cluster31)
embedding_cluster31_plot$word <- rownames(embedding_cluster31_plot)
tsne_31 <- Rtsne(embedding_cluster31, dims = 2, perplexity = 20, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_31 <- Rtsne(embedding_cluster31, dims = 2, perplexity = 18, verbose=TRUE, max_iter = 500, pca = TRUE)
# create df that can be used for making the plot.
embedding_cluster31_plot <- as.data.frame(embedding_cluster31)
embedding_cluster31_plot$word <- rownames(embedding_cluster31_plot)
plot_df <- data.frame(tsne_31$Y) %>%
mutate(
word = embedding_cluster31_plot$word,
)
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal()
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 2.5) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal()
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal()
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal() +
lims(-20, 25)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal() +
ylim(-20, 25)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-25, 25)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-30, 25)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 31") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-28, 25)
p
words_with_cluster[words_with_cluster$word == "academic", ]
words_with_cluster[words_with_cluster$word == "academia", ]
worcs::git_update()
worcs::git_update()
# load libraries
library(dplyr)
library(cluster)
library(ggplot2)
library(devtools)
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
set.seed(88)
# load glove word embedding file
glove_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_lemma.RData")
# create function to find similar words based on cosine distance
find_similar_words <- function(word, embedding_matrix, n = 5) {
similarities <- embedding_matrix[word, , drop = FALSE] %>%
sim2(embedding_matrix, y = ., method = "cosine")
similarities[, 1] %>% sort(decreasing = TRUE) %>% head(n)
}
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("mother",glove_embedding,25)
# create function to find similar words based on cosine distance
find_similar_words <- function(word, embedding_matrix, n = 5) {
similarities <- embedding_matrix[word, , drop = FALSE] %>%
sim2(embedding_matrix, y = ., method = "cosine")
similarities[, 1] %>% sort(decreasing = TRUE) %>% head(n)
}
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("mother",glove_embedding,25)
View(glove_embedding)
# create function to find similar words based on cosine distance
find_similar_words <- function(word, embedding_matrix, n = 5) {
similarities <- embedding_matrix[word, , drop = FALSE] %>%
sim2(embedding_matrix, y = ., method = "cosine")
similarities[, 1] %>% sort(decreasing = TRUE) %>% head(n)
}
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("mother",glove_embedding,25)
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("health",glove_embedding,25)
str(glove_embedding)
str(glove_embedding)
# load glove word embedding file
glove_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_lemma.RData")
str(glove_embedding)
library(text2vec)
# create function to find similar words based on cosine distance
find_similar_words <- function(word, embedding_matrix, n = 5) {
similarities <- embedding_matrix[word, , drop = FALSE] %>%
sim2(embedding_matrix, y = ., method = "cosine")
similarities[, 1] %>% sort(decreasing = TRUE) %>% head(n)
}
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("health",glove_embedding,25)
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("mother",glove_embedding,25)
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("father",glove_embedding,25)
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("mother",glove_embedding,35)
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("mother",glove_embedding,50)
# load libraries
library(dplyr)
library(cluster)
library(ggplot2)
library(devtools)
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
set.seed(88)
# load glove word embedding file
glove_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_lemma.RData")
str(glove_embedding)
library(text2vec)
# create function to find similar words based on cosine distance
find_similar_words <- function(word, embedding_matrix, n = 5) {
similarities <- embedding_matrix[word, , drop = FALSE] %>%
sim2(embedding_matrix, y = ., method = "cosine")
similarities[, 1] %>% sort(decreasing = TRUE) %>% head(n)
}
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("mother",glove_embedding,50)
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("black",glove_embedding,50)
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("white",glove_embedding,50)
# fit the k-means clustering with 100 clusters
k_means_fit <- kmeans(glove_embedding, 100, iter.max = 30, nstart = 25)
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster <- as.data.frame(cbind(row.names(glove_embedding), k_means_fit$cluster))
# add column names
names(words_with_cluster) <- c("word", "kmeans100")
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset=colnames(df_with_cluster_assignment[2]) == cluster_to_subset)
}
create_cluster_df(words_with_cluster, 1)
View(words_with_cluster)
View(words_with_cluster)
colnames(df_with_cluster_assignment[2])
colnames(words_with_cluster[2])
create_cluster_df(words_with_cluster, cluster_to_subset = 1)
create_cluster_df(df_with_cluster_assignment = words_with_cluster, cluster_to_subset = 1)
colnames(words_with_cluster[2])
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset="colnames(df_with_cluster_assignment[2])" == cluster_to_subset)
}
colnames(words_with_cluster[2])
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset=colnames(df_with_cluster_assignment[2]) == cluster_to_subset)
}
colnames(words_with_cluster[2])
create_cluster_df(df_with_cluster_assignment = words_with_cluster, cluster_to_subset = 1)
create_cluster_df(df_with_cluster_assignment = words_with_cluster, cluster_to_subset = 89)
View(create_cluster_df)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset=kmeans100 == cluster_to_subset)
}
create_cluster_df(df_with_cluster_assignment = words_with_cluster, cluster_to_subset = 89)
noquote(colnames(words_with_cluster[2]))
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset= noquote(colnames(df_with_cluster_assignment[2])) == cluster_to_subset)
}
create_cluster_df(df_with_cluster_assignment = words_with_cluster, cluster_to_subset = 89)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset= noquote(colnames(df_with_cluster_assignment[2])) == cluster_to_subset)
}
noquote(colnames(words_with_cluster[2]))
create_cluster_df(df_with_cluster_assignment = words_with_cluster, cluster_to_subset = 89)
View(create_cluster_df)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset= noquote(colnames(df_with_cluster_assignment[2]))== cluster_to_subset)
}
create_cluster_df(df_with_cluster_assignment = words_with_cluster, cluster_to_subset = 89)
create_cluster_df(words_with_cluster,89)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset = kmeans100 == cluster_to_subset)
}
create_cluster_df(words_with_cluster,89)
noquote(colnames(words_with_cluster[2]))
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset = noquote(colnames(df_with_cluster_assignment[2])) == cluster_to_subset)
}
noquote(colnames(words_with_cluster[2]))
create_cluster_df(words_with_cluster,89)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset=noquote(colnames(df_with_cluster_assignment[2])) == cluster_to_subset)
}
noquote(colnames(words_with_cluster[2]))
create_cluster_df(words_with_cluster,89)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, kmeansk, cluster_to_subset) {
subset(df_with_cluster_assignment, subset=kmeansk == cluster_to_subset)
}
create_cluster_df(words_with_cluster, kmeans100, 89)
create_cluster_df(words_with_cluster, "kmeans100", 89)
create_cluster_df(words_with_cluster, "kmeans100", 89)
noquote(colnames(words_with_cluster[2]))
cat(colnames(words_with_cluster[2]), "\n")
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset=cat(colnames(df_with_cluster[2]), "\n") == cluster_to_subset)
}
create_cluster_df(words_with_cluster,89)
cat(colnames(words_with_cluster[2]), "\n")
colnames(words_with_cluster[2], quote = FALSE)
colnames(words_with_cluster[2], "\n")
print(colnames(words_with_cluster[2]), quote = FALSE)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
subset(df_with_cluster_assignment, subset=print(colnames(words_with_cluster[2]), quote = FALSE) == cluster_to_subset)
}
create_cluster_df(words_with_cluster,89)
cat(colnames(words_with_cluster[2]), "\n")
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(df_with_cluster[2]), "\n")
subset(df_with_cluster_assignment, subset= kmeans_col == cluster_to_subset)
}
create_cluster_df(words_with_cluster,89)
# load glove word embedding file
glove_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_lemma.RData")
# fit the k-means clustering with 75 clusters
kmeans_fit75 <- kmeans(glove_embedding, 75, iter.max = 30, nstart = 25)
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster <- as.data.frame(cbind(row.names(glove_embedding), kmeans_fit75$cluster))
# add column names
names(words_with_cluster) <- c("word", "kmeans100")
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(df_with_cluster[2]), "\n")
subset(df_with_cluster_assignment, subset= kmeans_col == cluster_to_subset)
}
noquote(colnames(words_with_cluster[2]))
cat(colnames(words_with_cluster[2]), "\n")
print(colnames(words_with_cluster[2]), quote = FALSE)
create_cluster_df(words_with_cluster,89)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(df_with_cluster_assignment[2]), "\n")
subset(df_with_cluster_assignment, subset= kmeans_col == cluster_to_subset)
}
noquote(colnames(words_with_cluster[2]))
cat(colnames(words_with_cluster[2]), "\n")
print(colnames(words_with_cluster[2]), quote = FALSE)
create_cluster_df(words_with_cluster,89)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- noquote(colnames(words_with_cluster[2]))
subset(df_with_cluster_assignment, subset= kmeans_col == cluster_to_subset)
}
noquote(colnames(words_with_cluster[2]))
cat(colnames(words_with_cluster[2]), "\n")
print(colnames(words_with_cluster[2]), quote = FALSE)
create_cluster_df(words_with_cluster,89)
str(noquote(colnames(words_with_cluster[2])))
str(colnames(words_with_cluster[2]))
str(kmeans)
str(kmeans100)
str(cat(colnames(words_with_cluster[2]), "\n"))
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(words_with_cluster[2]), "\n")
subset(df_with_cluster_assignment, subset= kmeans_col == cluster_to_subset)
}
create_cluster_df(words_with_cluster,89)
kmeans_col
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(words_with_cluster[2]), "\n")
subset(df_with_cluster_assignment, subset= kmeans_col == cluster_to_subset)
print(kmeans_col)
}
create_cluster_df(words_with_cluster,89)
words_with_cluster[2]
words_with_cluster[1,2]
words_with_cluster[0,2]
words_with_cluster[0,1]
colnames(words_with_cluster[2])
# probeer andere aanpak for subsetten.
cluster1 <- subset(words_with_cluster, subset=kmeans100 == 1)
cluster1_1 <- words_with_cluster[, words_with_cluster$kmeans100 == 1]
View(cluster1)
cluster1_1 <- words_with_cluster[, words_with_cluster$kmeans100 == 1]
cluster1_1 <- subset(words_with_cluster, kmeans100 == 1)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(words_with_cluster[2]), "\n")
subset(df_with_cluster_assignment, kmeans_col == cluster_to_subset)
}
noquote(colnames(words_with_cluster[2]))
cat(colnames(words_with_cluster[2]), "\n")
print(colnames(words_with_cluster[2]), quote = FALSE)
str(noquote(colnames(words_with_cluster[2])))
create_cluster_df(words_with_cluster,89)
create_cluster_df(words_with_cluster,89)
# create function to find similar words based on cosine distance
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
#kmeans_col <- cat(colnames(words_with_cluster[2]), "\n")
subset(df_with_cluster_assignment, cat(colnames(words_with_cluster[2]), "\n") == cluster_to_subset)
}
create_cluster_df(words_with_cluster,89)
cluster1_1 <- words_with_cluster[words_with_cluster$kmeans100 == 1, ]
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(words_with_cluster[2]), "\n")
df_with_cluster_assignmen[df_with_cluster_assignmen$kmeans_col == 1, ]
}
create_cluster_df(words_with_cluster,89)
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(words_with_cluster[2]), "\n")
df_with_cluster_assignmen[df_with_cluster_assignment$kmeans_col == 1, ]
}
create_cluster_df(words_with_cluster,89)
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- cat(colnames(words_with_cluster[2]), "\n")
df_with_cluster_assignment[df_with_cluster_assignment$kmeans_col == 1, ]
}
create_cluster_df(words_with_cluster,89)
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
kmeans_col <- noquote(colnames(words_with_cluster[2]))
df_with_cluster_assignment[df_with_cluster_assignment$kmeans_col == 1, ]
}
create_cluster_df(words_with_cluster,89)
create_cluster_df <- function(df_with_cluster_assignment, cluster_to_subset) {
df_with_cluster_assignment[df_with_cluster_assignment[,2] == 1, ]
}
create_cluster_df(words_with_cluster,89)
# load glove word embedding file
glove_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_lemma.RData")
str(glove_embedding)
# load libraries
library(dplyr)
library(cluster)
library(ggplot2)
library(devtools)
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
set.seed(88)
library(text2vec)
# create function to find similar words based on cosine distance
find_similar_words <- function(word, embedding_matrix, n = 5) {
similarities <- embedding_matrix[word, , drop = FALSE] %>%
sim2(embedding_matrix, y = ., method = "cosine")
similarities[, 1] %>% sort(decreasing = TRUE) %>% head(n)
}
# Run function on the word health and see the 25 closest words based on cosine similarity.
find_similar_words("white",glove_embedding,50)
library(rword2vec)
install.packages("rword2vec")
library(devtools)
install_github("mukul13/rword2vec")
library(rword2vec)
# load lemma filter
filter_lemma <- readRDS("filter_lemma.RData")
setwd("~/Documents/Research_Assistant_Rgit/veni_sysrev/amy")
# load lemma filter
filter_lemma <- readRDS("filter_lemma.RData")
# save as .csv
write.csv(filter_lemma,"/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/words_abstracts.csv", row.names = FALSE)
View(filter_lemma)
worcs::git_update()
worcs::git_update()
