word = embedding_cluster124_plot$word,
)
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 124") +
theme(legend.position = "none") +
theme_minimal()
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 124") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-15, 15)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 124") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-15, 12)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 124") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-13, 12)
p
## VISUALIZATION OF PLOTS FROM CLUSTERING WIHT W2V EMBEDDINGS ##
# TSNE VISUALIZATION OF CLUSTER 112 (emotional_dysregulation cluster)
# create plot of separate cluster with tsne
embedding_cluster112_w2v <- subset(glove_embedding, rownames(glove_embedding) %in% cluster_w2v_112$word)
## VISUALIZATION OF PLOTS FROM CLUSTERING WIHT W2V EMBEDDINGS ##
# TSNE VISUALIZATION OF CLUSTER 112 (emotional_dysregulation cluster)
# create plot of separate cluster with tsne
embedding_cluster112_w2v <- subset(glove_embedding, rownames(glove_embedding) %in% cluster125_w2v_112$word)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 25, verbose=TRUE, max_iter = 500, pca = TRUE)
# create df that can be used for making the plot.
embedding_cluster112_w2v_plot <- as.data.frame(embedding_cluster117_w2v)
# create df that can be used for making the plot.
embedding_cluster112_w2v_plot <- as.data.frame(embedding_cluster112_w2v)
embedding_cluster112_w2v_plot$word <- rownames(embedding_cluster117_w2v_plot)
embedding_cluster112_w2v_plot$word <- rownames(embedding_cluster112_w2v_plot)
plot_df <- data.frame(tsne_clst_112_w2v $Y) %>%
mutate(
word = embedding_cluster112_w2v_plot$word,
)
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 112 - W2V") +
theme(legend.position = "none") +
theme_minimal()
p
View(cluster125_w2v_112)
# TSNE VISUALIZATION OF CLUSTER W2V 117 (family related cluster)
# create plot of separate cluster with tsne
embedding_cluster117_w2v <- subset(glove_embedding, rownames(glove_embedding) %in% cluster_w2v_117$word)
# TSNE VISUALIZATION OF CLUSTER W2V 117 (family related cluster)
# create plot of separate cluster with tsne
embedding_cluster117_w2v <- subset(glove_embedding, rownames(glove_embedding) %in% cluster125_w2v_117$word)
tsne_clst_117_w2v <- Rtsne(embedding_cluster117_w2v, dims = 2, perplexity = 25, verbose=TRUE, max_iter = 500, pca = TRUE)
# create df that can be used for making the plot.
embedding_cluster117_w2v_plot <- as.data.frame(embedding_cluster117_w2v)
embedding_cluster117_w2v_plot$word <- rownames(embedding_cluster117_w2v_plot)
plot_df <- data.frame(tsne_clst_117_w2v $Y) %>%
mutate(
word = embedding_cluster117_w2v_plot$word,
)
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 117 - W2V") +
theme(legend.position = "none") +
theme_minimal()
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 117 - W2V") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-10, 6)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 117 - W2V") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-8, 6)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 117 - W2V") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-9, 6)
p
# find out to which cluster the word environment is assigned
words_with_cluster125[words_with_cluster125$word == "environment", ]
cluster125_58 <- subset(words_with_cluster125, subset=kmeans125 == 58)
View(cluster125_58)
# find out to which cluster the word health is assigned
words_with_cluster125[words_with_cluster125$word == "health", ]
View(cluster125_58)
# find out to which cluster the word health is assigned
words_with_cluster125[words_with_cluster125$word == "health", ]
cluster125_119 <- subset(words_with_cluster125, subset=kmeans125 == 119)
View(cluster125_119)
# look at the size of the clusters
kmeans_fit125$size
cluster125_125 <- subset(words_with_cluster125, subset=kmeans125 == 125)
View(cluster125_125)
cluster125_28 <- subset(words_with_cluster125, subset=kmeans125 == 28)
View(cluster125_28)
# fit the k-means clustering with 125 clusters
kmeans_fit125 <- kmeans(glove_embedding, 125, iter.max = 30, nstart = 25)
# look at the size of the clusters
kmeans_fit125$size
# find out to which cluster the word health is assigned
words_with_cluster125[words_with_cluster125$word == "yoga", ]
# CHECK CLUSTERS
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster125 <- as.data.frame(cbind(row.names(glove_embedding), kmeans_fit125$cluster))
# add column names
names(words_with_cluster125) <- c("word", "kmeans125")
# Check cluster with highest silhouette average
cluster125_hghsil <- subset(words_with_cluster125, subset=kmeans125 == 47)
# find out to which cluster the word health is assigned
words_with_cluster125[words_with_cluster125$word == "yoga", ]
set.seed(88)
# fit the k-means clustering with 125 clusters
kmeans_fit125 <- kmeans(glove_embedding, 125, iter.max = 30, nstart = 25)
# look at the size of the clusters
kmeans_fit125$size
# CHECK CLUSTERS
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster125 <- as.data.frame(cbind(row.names(glove_embedding), kmeans_fit125$cluster))
# add column names
names(words_with_cluster125) <- c("word", "kmeans125")
# find out to which cluster the word health is assigned
words_with_cluster125[words_with_cluster125$word == "yoga", ]
cluster125_47 <- subset(words_with_cluster125, subset=kmeans125 == 47)
View(cluster125_47)
cluster125_22 <- subset(words_with_cluster125, subset=kmeans125 == 22)
View(cluster125_22)
cluster125_21 <- subset(words_with_cluster125, subset=kmeans125 == 21)
View(cluster125_21)
View(cluster125_21)
cluster125_93 <- subset(words_with_cluster125, subset=kmeans125 == 93)
View(cluster125_93)
cluster125_100 <- subset(words_with_cluster125, subset=kmeans125 == 100)
View(cluster125_100)
cluster125_99 <- subset(words_with_cluster125, subset=kmeans125 == 99)
View(cluster125_99)
cluster125_102 <- subset(words_with_cluster125, subset=kmeans125 == 102)
View(cluster125_102)
cluster125_103 <- subset(words_with_cluster125, subset=kmeans125 == 103)
View(cluster125_103)
cluster125_86 <- subset(words_with_cluster125, subset=kmeans125 == 86)
View(cluster125_86)
View(cluster125_28)
cluster125_68 <- subset(words_with_cluster125, subset=kmeans125 == 68)
View(cluster125_17)
View(cluster125_68)
cluster125_52 <- subset(words_with_cluster125, subset=kmeans125 == 52)
View(cluster125_52)
cluster125_9 <- subset(words_with_cluster125, subset=kmeans125 == 9)
View(cluster125_9)
cluster125_7 <- subset(words_with_cluster125, subset=kmeans125 == 7)
View(cluster125_7)
cluster125_14 <- subset(words_with_cluster125, subset=kmeans125 == 14)
View(cluster125_14)
cluster125_15 <- subset(words_with_cluster125, subset=kmeans125 == 15)
View(cluster125_15)
cluster125_18 <- subset(words_with_cluster125, subset=kmeans125 == 18)
View(cluster125_18)
View(cluster125_18)
# CLUSTER ANALYSIS WITHIN CLUSTER
# create new subset data frame
embedding_cluster18 <- subset(glove_embedding, rownames(glove_embedding) %in% cluster125_18$word)
# fit k-means
kmeans_fit3_cluster18 <- kmeans(embedding_cluster18, 3, iter.max = 30, nstart = 25)
# visualize the k-means (with k = 3) clusters
fviz_cluster(kmeans_fit3_cluster18, data = embedding_cluster18,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal()
)
# CLUSTER ANALYSIS WITHIN CLUSTER
# create new subset data frame
embedding_cluster21 <- subset(glove_embedding, rownames(glove_embedding) %in% cluster125_21$word)
# fit k-means
kmeans_fit3_cluster21 <- kmeans(embedding_cluster21, 3, iter.max = 30, nstart = 25)
# visualize the k-means (with k = 3) clusters
fviz_cluster(kmeans_fit3_cluster21, data = embedding_cluster18,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal()
)
# visualize the k-means (with k = 3) clusters
fviz_cluster(kmeans_fit3_cluster21, data = embedding_cluster21,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal()
)
# look at the results
# Create data frame in which the merge cluster assignment back to rows/word.
words_with_cluster21_3 <- as.data.frame(cbind(row.names(embedding_cluster21), kmeans_fit3_cluster21$cluster))
# add column names
names(words_with_cluster21_3) <- c("word", "kmeans3")
# make a df for the 3 cluster results
cluster21_1 <- subset(words_with_cluster46_3, subset=kmeans3 == 1)
cluster21_2 <- subset(words_with_cluster46_3, subset=kmeans3 == 2)
cluster21_3 <- subset(words_with_cluster46_3, subset=kmeans3 == 3)
# make a df for the 3 cluster results
cluster21_1 <- subset(words_with_cluster21_3, subset=kmeans3 == 1)
cluster21_2 <- subset(words_with_cluster21_3, subset=kmeans3 == 2)
cluster21_3 <- subset(words_with_cluster21_3, subset=kmeans3 == 3)
View(cluster21_1)
View(cluster21_2)
View(cluster21_3)
View(cluster125_18)
View(cluster125_18)
cluster125_37 <- subset(words_with_cluster125, subset=kmeans125 == 37)
View(cluster125_37)
cluster125_38 <- subset(words_with_cluster125, subset=kmeans125 == 38)
View(cluster125_38)
cluster125_36 <- subset(words_with_cluster125, subset=kmeans125 == 36)
View(cluster125_36)
cluster125_31 <- subset(words_with_cluster125, subset=kmeans125 == 31)
View(cluster125_31)
cluster125_32 <- subset(words_with_cluster125, subset=kmeans125 == 32)
View(cluster125_32)
cluster125_31 <- subset(words_with_cluster125, subset=kmeans125 == 31)
View(cluster125_31)
cluster125_46 <- subset(words_with_cluster125, subset=kmeans125 == 46)
View(cluster125_46)
cluster125_45 <- subset(words_with_cluster125, subset=kmeans125 == 45)
View(cluster125_45)
cluster125_113 <- subset(words_with_cluster125, subset=kmeans125 == 113)
View(cluster125_113)
cluster125_114 <- subset(words_with_cluster125, subset=kmeans125 == 114)
View(cluster125_114)
cluster125_115 <- subset(words_with_cluster125, subset=kmeans125 == 115)
View(cluster125_115)
cluster125_120 <- subset(words_with_cluster125, subset=kmeans125 == 12o)
cluster125_120 <- subset(words_with_cluster125, subset=kmeans125 == 120)
View(cluster125_120)
# create new subset data frame
embedding_cluster120 <- subset(glove_embedding, rownames(glove_embedding) %in% cluster125_120$word)
# fit k-means
kmeans_fit3_cluster120 <- kmeans(embedding_cluster120, 3, iter.max = 30, nstart = 25)
fviz_cluster(kmeans_fit3_cluster120, data = embedding_cluster120,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal()
)
# fit k-means
kmeans_fit3_cluster21 <- kmeans(embedding_cluster124, 3, iter.max = 30, nstart = 25)
# look at the results
# Create data frame in which the merge cluster assignment back to rows/word.
words_with_cluster124_3 <- as.data.frame(cbind(row.names(embedding_cluster124), kmeans_fit3_cluster124$cluster))
# fit k-means
kmeans_fit3_cluster124 <- kmeans(embedding_cluster124, 3, iter.max = 30, nstart = 25)
# look at the results
# Create data frame in which the merge cluster assignment back to rows/word.
words_with_cluster124_3 <- as.data.frame(cbind(row.names(embedding_cluster124), kmeans_fit3_cluster124$cluster))
# add column names
names(words_with_cluster124_3) <- c("word", "kmeans3")
# visualize the k-means (with k = 3) clusters
fviz_cluster(kmeans_fit3_cluster124, data = embedding_cluster124,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal()
)
View(cluster125_21)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 30, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 40, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 45, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 50, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 55, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 65, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 80, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 75, verbose=TRUE, max_iter = 500, pca = TRUE)
plot_df <- data.frame(tsne_clst_112_w2v $Y) %>%
mutate(
word = embedding_cluster112_w2v_plot$word,
)
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 112 - W2V") +
theme(legend.position = "none") +
theme_minimal()
p
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 78, verbose=TRUE, max_iter = 500, pca = TRUE)
tsne_clst_112_w2v <- Rtsne(embedding_cluster112_w2v, dims = 2, perplexity = 77, verbose=TRUE, max_iter = 500, pca = TRUE)
plot_df <- data.frame(tsne_clst_112_w2v $Y) %>%
mutate(
word = embedding_cluster112_w2v_plot$word,
)
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 112 - W2V") +
theme(legend.position = "none") +
theme_minimal()
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 112 - W2V") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-5, 5)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 112 - W2V") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-4, 3)
p
p <- ggplot(plot_df, aes(X1, X2)) +
geom_text(aes(X1, X2, label = word), size = 3) +
xlab("") + ylab("") +
ggtitle("2-dimensional t-SNE Mapping of Word Vectors Belonging to Cluster 112 - W2V") +
theme(legend.position = "none") +
theme_minimal() +
xlim(-3.8, 3.5)
p
View(cluster125_w2v_112)
# CLUSTER ANALYSIS WITHIN CLUSTER
# fit k-means
kmeans_fit3_cluster112_w2v <- kmeans(embedding_cluster112_w2v, 3, iter.max = 30, nstart = 25)
# look at the results
# Create data frame in which the merge cluster assignment back to rows/word.
words_with_cluster112_w2v_3 <- as.data.frame(cbind(row.names(embedding_cluster112_w2v), kmeans_fit3_cluster112_w2v$cluster))
# add column names
names(words_with_cluster112_w2v_3) <- c("word", "kmeans3")
# visualize the k-means (with k = 3) clusters
fviz_cluster(kmeans_fit3_cluster112_w2v, data = embedding_cluster112_w2v,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal()
)
View(cluster125_w2v_61)
fviz_silhouette(sil)
View(cluster125_w2v_112)
# load libraries
library(dplyr)
library(cluster)
library(ggplot2)
library(devtools)
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
library(factoextra)
set.seed(88)
# load glove word embedding file
glove_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_final.RData")
# load w2v bigrams word embedding file
w2v_bigrams_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/w2v_bigrams_embedding.RData")
library(text2vec)
# create function to find similar words based on cosine distance
find_similar_words <- function(word, embedding_matrix, n = 5) {
similarities <- embedding_matrix[word, , drop = FALSE] %>%
sim2(embedding_matrix, y = ., method = "cosine")
similarities[, 1] %>% sort(decreasing = TRUE) %>% head(n)
}
# check if socio-emotional and socioemotional are similar words in the glove bigrams embedding
find_similar_words("socio-emotional",glove_bigrams_embedding,25)
# load glove bigrams word embedding file
glove_bigrams_embedding <-  readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_bigrams.RData")
# check if socio-emotional and socioemotional are similar words in the glove bigrams embedding
find_similar_words("socio-emotional",glove_bigrams_embedding,25)
find_similar_words("socioemotional",glove_bigrams_embedding,25)
set.seed(88)
# fit the k-means clustering with 125 clusters
kmeans_fit125 <- kmeans(glove_embedding, 125, iter.max = 30, nstart = 25)
# fit the k-means clustering with 125 clusters
kmeans_fit125 <- kmeans(glove_embedding, 125, iter.max = 30, nstart = 25)
# results
kmeans_fit125
# obtain the centroids
kmeans_fit125$centers
# look at the size of the clusters
kmeans_fit125$size
min(kmeans_fit125$size)
max(kmeans_fit125$size)
# CHECK CLUSTERS
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster125 <- as.data.frame(cbind(row.names(glove_embedding), kmeans_fit125$cluster))
# add column names
names(words_with_cluster125) <- c("word", "kmeans125")
# Check cluster with highest silhouette average
cluster125_hghsil <- subset(words_with_cluster125, subset=kmeans125 == 47)
View(cluster125_hghsil)
# load libraries
library(dplyr)
library(cluster)
library(ggplot2)
library(devtools)
library(data.table, quietly = TRUE, warn.conflicts = FALSE)
library(factoextra)
set.seed(88)
# load glove word embedding file
glove_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/try_outs/glove_embedding_final.RData")
# load w2v word embedding file
w2v_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/w2v_embedding.RData")
set.seed(88)
# fit the k-means clustering with 125 clusters
kmeans_fit125 <- kmeans(glove_embedding, 125, iter.max = 30, nstart = 25)
# results
kmeans_fit125
# look at the size of the clusters
kmeans_fit125$size
min(kmeans_fit125$size)
max(kmeans_fit125$size)
# silhouette width
sil <- silhouette(kmeans_fit125$cluster, dist(glove_embedding))
fviz_silhouette(sil)
# CHECK CLUSTERS
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster125 <- as.data.frame(cbind(row.names(glove_embedding), kmeans_fit125$cluster))
# add column names
names(words_with_cluster125) <- c("word", "kmeans125")
# Check cluster with highest silhouette average
cluster125_hghsil <- subset(words_with_cluster125, subset=kmeans125 == 47)
View(cluster125_hghsil)
# Check smallest cluster
cluster125_97 <- subset(words_with_cluster125, subset=kmeans125 == 97)
View(cluster125_97)
# Mother
# find out in which cluster the word mother is assigned
words_with_cluster125[words_with_cluster125$word == "mother", ]
cluster125_21 <- subset(words_with_cluster125, subset=kmeans125 == 21)
View(cluster125_97)
View(cluster125_21)
# check a cluster with a low average silhouette width
cluster125_lowsil2 <- subset(words_with_cluster125, subset=kmeans125 == 124)
View(cluster125_lowsil2)
# CLUSTER ANALYSIS WITHIN CLUSTER
# create new subset data frame
embedding_cluster21 <- subset(glove_embedding, rownames(glove_embedding) %in% cluster125_21$word)
# fit k-means
kmeans_fit3_cluster21 <- kmeans(embedding_cluster21, 3, iter.max = 30, nstart = 25)
# look at the results
# Create data frame in which the merge cluster assignment back to rows/word.
words_with_cluster21_3 <- as.data.frame(cbind(row.names(embedding_cluster21), kmeans_fit3_cluster21$cluster))
# add column names
names(words_with_cluster21_3) <- c("word", "kmeans3")
# make a df for the 3 cluster results
cluster21_1 <- subset(words_with_cluster21_3, subset=kmeans3 == 1)
cluster21_2 <- subset(words_with_cluster21_3, subset=kmeans3 == 2)
cluster21_3 <- subset(words_with_cluster21_3, subset=kmeans3 == 3)
# visualize the k-means (with k = 3) clusters
fviz_cluster(kmeans_fit3_cluster21, data = embedding_cluster21,
palette = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
ellipse.type = "euclid", # Concentration ellipse
star.plot = TRUE, # Add segments from centroids to items
repel = TRUE, # Avoid label overplotting (slow)
ggtheme = theme_minimal()
)
# CLUSTER ANALYSIS W2V BIGRAMS
# fit the k-means clustering with 125 clusters on w2v bigrams embedding.
kmeans_fit125_w2v <- kmeans(w2v_bigrams_embedding, 125, iter.max = 30, nstart = 25)
# load w2v bigrams word embedding file
w2v_bigrams_embedding <- readRDS("/Users/amyvanderham/Documents/Research_Assistant_Rgit/veni_sysrev/amy/w2v_bigrams_embedding.RData")
# CLUSTER ANALYSIS W2V BIGRAMS
# fit the k-means clustering with 125 clusters on w2v bigrams embedding.
kmeans_fit125_w2v <- kmeans(w2v_bigrams_embedding, 125, iter.max = 30, nstart = 25)
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster125_w2v <- as.data.frame(cbind(row.names(w2v_bigrams_embedding), kmeans_fit125_w2v$cluster))
# add column names
names(words_with_cluster125_w2v) <- c("word", "kmeans125")
# find out to which cluster the word emotional_dysregulation is assigned
words_with_cluster125_w2v[words_with_cluster125_w2v$word == "emotional_dysregulation", ]
cluster125_w2v_112 <- subset(words_with_cluster125_w2v, subset=kmeans125 == 112)
View(cluster125_w2v_112)
# CLUSTER ANALYSIS W2V BIGRAMS
set.seed(88)
# fit the k-means clustering with 125 clusters on w2v bigrams embedding.
kmeans_fit125_w2v <- kmeans(w2v_bigrams_embedding, 125, iter.max = 30, nstart = 25)
# Create data frame in which the cluster assignment is merged back to rows/word.
words_with_cluster125_w2v <- as.data.frame(cbind(row.names(w2v_bigrams_embedding), kmeans_fit125_w2v$cluster))
# add column names
names(words_with_cluster125_w2v) <- c("word", "kmeans125")
# find out to which cluster the word emotional_dysregulation is assigned
words_with_cluster125_w2v[words_with_cluster125_w2v$word == "emotional_dysregulation", ]
cluster125_w2v_59 <- subset(words_with_cluster125_w2v, subset=kmeans125 == 59)
View(cluster125_w2v_59)
worcs::git_update()
